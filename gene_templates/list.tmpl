{{define "list_hdl.go"}}{{ $name:=.Name | Title }}
package {{.Name}}

import (
	"context"
	"encoding/json"
	gcontext "github.com/gorilla/context"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/mongo"
	"go.mongodb.org/mongo-driver/mongo/options"
	"net/http"
	"net/url"
	"strconv"
	"strings"
)

{{template "Atoin64"}}
{{template "GetOpts"}}

func ListHDL(Col *mongo.Collection,
	IsAllow func(User interface{}) bool, Denied func(w http.ResponseWriter),
	OnError func(http.ResponseWriter, error) bool) func(w http.ResponseWriter, r *http.Request) {
	return func(w http.ResponseWriter, r *http.Request) {
		user := gcontext.Get(r, "user")
		if !IsAllow(user) {
			Denied(w)
			return
		}
		q := r.URL.Query()
		query := bson.M{}
    {{range .List.Filter}}
    {{ template "filter" .}}
    {{end}}

		cur, err := Col.Find(context.Background(), query, GetOpts(q))
		if OnError(w, err) {
			return
		}
		vals := []*{{$name}}{}
		w.Header().Set("ContentType", "application/json")
		for cur.Next(context.Background()) {
			val := &{{$name}}{}
			err := cur.Decode(val)
			if OnError(w, err) {
				return
			}
			vals = append(vals, val)
		}
		json.NewEncoder(w).Encode(vals)
		if OnError(w, err) {
			return
		}
	}
}
{{end}}